{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "AttributeQueueID": {
            "title": "Attribute Queue ID",
            "description": "Enter the attribute name used for setting Queue ID",
            "type": "string",
            "default": "subscription-id"
        },
        "CreateQueue": {
            "title": "Option to create queue with name defined in Attribute Queue ID",
            "description": "Choose to create this queue or not",
            "type": "boolean",
            "default": true
        },
        "PublishQueue": {
            "title": "Option to publish queue with name defined in Attribute Queue ID",
            "description": "Choose to publish to this queue or not",
            "type": "boolean",
            "default": true
        },
        "RabbitMQHost": {
            "title": "RabbitMQ Host",
            "description": "Enter address of RabbitMQ",
            "type": "string",
            "default": "localhost"
        },
        "RabbitMQPort": {
            "title": "RabbitMQ Port",
            "description": "Enter port of RabbitMQ",
            "type": "integer",
            "default": "5672",
            "minimum": 1,
            "maximum": 65535,
            "messages": {
                "minimum": "Port must be greater than 0",
                "maximum": "Port must be less than 65536"
            }
        },
        "RabbitMQUsername": {
            "title": "RabbitMQ Username",
            "description": "Enter username of RabbitMQ",
            "type": "string",
            "default": ""
        },
        "RabbitMQPassword": {
            "title": "RabbitMQ Password",
            "description": "Enter password of RabbitMQ",
            "type": "string",
            "default": ""
        },
        "RabbitMQTimeout": {
            "title": "RabbitMQ TimeToLive",
            "description": "Enter Time to Live of RabbitMQ Queue",
            "type": "integer",
            "default": 100000
        },
        "RabbitMQQueueDurable": {
            "title": "RabbitMQ Queue Durable",
            "description": "Metadata of a durable queue is stored on disk, while metadata of a transient (not durable) queue is stored in memory when possible",
            "type": "boolean",
            "default": false
        },
        "RabbitMQQueueExclusive": {
            "title": "RabbitMQ Queue Exclusive",
            "description": "An exclusive queue can only be used (consumed from, purged, deleted, etc) by its declaring connection",
            "type": "boolean",
            "default": false
        },
        "RabbitMQQueueAutoDelete": {
            "title": "RabbitMQ Queue Auto Delete",
            "description": "An auto-delete queue will be deleted when its last consumer is cancelled",
            "type": "boolean",
            "default": true
        },
        "RabbitMQQueueMessageJson": {
            "title": "RabbitMQ Queue Message Json",
            "description": "Choose to publish message as json or not (raw string)",
            "type": "boolean",
            "default": true
        },
        "Body": {
            "title": "Body content",
            "type": "string",
            "format": "gio-code-editor",
            "x-schema-form": {
                "type": "codemirror",
                "codemirrorOptions": {
                    "placeholder": "Put the body content here",
                    "lineWrapping": true,
                    "lineNumbers": true,
                    "allowDropFileTypes": true,
                    "autoCloseTags": true,
                    "mode": "xml"
                }
            },
            "gioConfig": {
                "banner": {
                    "title": "Body content",
                    "text": "The body content to attach to the request or to the response. You can also make use of freemarker templating engine to map an incoming body content to a new one."
                }
            },
            "default": {
                "properties": {},
                "routing_key": "my_auto_delete_queue",
                "payload": "Hello, RabbitMQ via HTTP!",
                "payload_encoding": "string"
            }
        }
    },
    "required": [
        "AttributeQueueID",
        "CreateQueue",
        "PublishQueue",
        "RabbitMQHost",
        "RabbitMQPort",
        "RabbitMQUsername",
        "RabbitMQPassword",
        "RabbitMQTimeout",
        "RabbitMQQueueDurable",
        "RabbitMQQueueExclusive",
        "RabbitMQQueueAutoDelete",
        "Body"
    ]
}
